{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ioan_\\\\Documents\\\\Anul_2\\\\sem 2\\\\IP\\\\Proiect\\\\IP-2022\\\\FrontEnd\\\\concept-descriptor\\\\src\\\\components\\\\Results\\\\ResponseComponent.js\";\nimport React from 'react';\nimport CrawlerService from '../../services/CrawlerService'; // import DataProcessingService from '../../services/DataProcessingService'\n// import StatisticsService from '../../services/StatisticsService';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CRAWLER_REST_API_URL = 'https://crawler-r.herokuapp.com/crawl'; //const DATAPROCESSING_REST_API_URL = '';\n//const STATISTICS_REST_API_URL = '';\n\nclass ResponseComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jsonData: \"\"\n    };\n  }\n\n  componentDidMount() {\n    var intermediateData; //fiecare serviciu un callback la celalalt momentan\n\n    CrawlerService.callApi(this.props.firstConcept, this.props.secondConcept, CRAWLER_REST_API_URL).then(crawlerResponse => {\n      console.log(\"CRAWLER RESPONSE\", crawlerResponse.data);\n      intermediateData = crawlerResponse.data;\n    }) // .then(\n    //     DataProcessingService.callApi(intermediateData,DATAPROCESSING_REST_API_URL) etc\n    // )\n    .then(() => {\n      this.setState({\n        jsonData: JSON.stringify(intermediateData)\n      });\n    }); // Aici o sa fie apelate toate componentele, iar ultimul rand va fi un setState. In jsonData va fi tot ce primim de la statistici\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"The HTTP response: \", this.state.jsonData]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this) // Aici o sa vina cam tot front-u BACIU\n    ;\n  }\n\n  async callAllModules() {//this.props.firstConcept = concept1, this.props.secondConcept = concept2\n  }\n\n}\n\nexport default ResponseComponent;","map":{"version":3,"names":["React","CrawlerService","CRAWLER_REST_API_URL","ResponseComponent","Component","constructor","props","state","jsonData","componentDidMount","intermediateData","callApi","firstConcept","secondConcept","then","crawlerResponse","console","log","data","setState","JSON","stringify","render","callAllModules"],"sources":["C:/Users/ioan_/Documents/Anul_2/sem 2/IP/Proiect/IP-2022/FrontEnd/concept-descriptor/src/components/Results/ResponseComponent.js"],"sourcesContent":["import React from 'react';\r\nimport CrawlerService from '../../services/CrawlerService';\r\n// import DataProcessingService from '../../services/DataProcessingService'\r\n// import StatisticsService from '../../services/StatisticsService';\r\n\r\nconst CRAWLER_REST_API_URL = 'https://crawler-r.herokuapp.com/crawl';\r\n//const DATAPROCESSING_REST_API_URL = '';\r\n//const STATISTICS_REST_API_URL = '';\r\n\r\nclass ResponseComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            jsonData: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        var intermediateData;\r\n        //fiecare serviciu un callback la celalalt momentan\r\n        CrawlerService.callApi(this.props.firstConcept, this.props.secondConcept, CRAWLER_REST_API_URL)\r\n            .then((crawlerResponse) => {\r\n                console.log(\"CRAWLER RESPONSE\", crawlerResponse.data);\r\n                intermediateData = crawlerResponse.data;\r\n            })\r\n            // .then(\r\n            //     DataProcessingService.callApi(intermediateData,DATAPROCESSING_REST_API_URL) etc\r\n            // )\r\n            .then(() => { this.setState({ jsonData: JSON.stringify(intermediateData) }); });\r\n\r\n\r\n\r\n        // Aici o sa fie apelate toate componentele, iar ultimul rand va fi un setState. In jsonData va fi tot ce primim de la statistici\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <h2>The HTTP response: {this.state.jsonData}</h2>   // Aici o sa vina cam tot front-u BACIU\r\n        )\r\n    }\r\n\r\n    async callAllModules() {\r\n        //this.props.firstConcept = concept1, this.props.secondConcept = concept2\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default ResponseComponent;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,+BAA3B,C,CACA;AACA;;;AAEA,MAAMC,oBAAoB,GAAG,uCAA7B,C,CACA;AACA;;AAEA,MAAMC,iBAAN,SAAgCH,KAAK,CAACI,SAAtC,CAAgD;EAE5CC,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACTC,QAAQ,EAAE;IADD,CAAb;EAGH;;EAEDC,iBAAiB,GAAG;IAEhB,IAAIC,gBAAJ,CAFgB,CAGhB;;IACAT,cAAc,CAACU,OAAf,CAAuB,KAAKL,KAAL,CAAWM,YAAlC,EAAgD,KAAKN,KAAL,CAAWO,aAA3D,EAA0EX,oBAA1E,EACKY,IADL,CACWC,eAAD,IAAqB;MACvBC,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,eAAe,CAACG,IAAhD;MACAR,gBAAgB,GAAGK,eAAe,CAACG,IAAnC;IACH,CAJL,EAKI;IACA;IACA;IAPJ,CAQKJ,IARL,CAQU,MAAM;MAAE,KAAKK,QAAL,CAAc;QAAEX,QAAQ,EAAEY,IAAI,CAACC,SAAL,CAAeX,gBAAf;MAAZ,CAAd;IAAgE,CARlF,EAJgB,CAgBhB;EAEH;;EAEDY,MAAM,GAAG;IACL,oBACI;MAAA,kCAAwB,KAAKf,KAAL,CAAWC,QAAnC;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,CACwD;IADxD;EAGH;;EAEmB,MAAde,cAAc,GAAG,CACnB;EAIH;;AAxC2C;;AA2ChD,eAAepB,iBAAf"},"metadata":{},"sourceType":"module"}